name: ci
on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  # For some builds, we use cross to test on 32-bit and big-endian
  # systems.
  CARGO: cargo
  # When CARGO is set to CROSS, this is set to `--target matrix.target`.
  # Note that we only use cross on Linux, so setting a target on a
  # different OS will just use normal cargo.
  TARGET_FLAGS:
  # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
  TARGET_DIR: ./target
  # Bump this as appropriate. We pin to a version to make sure CI
  # continues to work as cross releases in the past have broken things
  # in subtle ways.
  CROSS_VERSION: v0.2.5
  # Emit backtraces on panics.
  RUST_BACKTRACE: 1

jobs:
  test:
    name: ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: windows-latest
          - os: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Use Cross
        if: matrix.os == 'ubuntu-latest' && matrix.target != ''
        run: |
          # In the past, new releases of 'cross' have broken CI. So for now, we
          # pin it. We also use their pre-compiled binary releases because cross
          # has over 100 dependencies and takes a bit to compile.
          dir="$RUNNER_TEMP/cross-download"
          mkdir "$dir"
          echo "$dir" >> $GITHUB_PATH
          cd "$dir"
          curl -LO "https://github.com/cross-rs/cross/releases/download/$CROSS_VERSION/cross-x86_64-unknown-linux-musl.tar.gz"
          tar xf cross-x86_64-unknown-linux-musl.tar.gz
          echo "CARGO=cross" >> $GITHUB_ENV
          echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
          echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show command used for Cargo
        run: |
          echo "cargo command is: ${{ env.CARGO }}"
          echo "target flag is: ${{ env.TARGET_FLAGS }}"
          echo "target dir is: ${{ env.TARGET_DIR }}"

      - name: Build
        run: ${{ env.CARGO }} build --verbose ${{ env.TARGET_FLAGS }}

      - name: Run tests
        run: ${{ env.CARGO }} test --verbose ${{ env.TARGET_FLAGS }}
